#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВывестиДеревоМетаданных(Команда)
	ВывестиМетаданные()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВывестиМетаданные()
	
	ДеревоМетаданных = РеквизитФормыВЗначение("ДеревоКонфигурации");
	
	ДеревоМетаданных.Строки.Очистить();
	ОбойтиЭлементМетаданных(ДеревоМетаданных, "Справочники", Истина);
	ОбойтиЭлементМетаданных(ДеревоМетаданных, "Документы", Истина);
	ОбойтиЭлементМетаданных(ДеревоМетаданных, "Обработки", Ложь);
	
	ЗначениеВРеквизитФормы(ДеревоМетаданных, "ДеревоКонфигурации");
	
КонецПроцедуры

&НаСервере
Процедура ОбойтиЭлементМетаданных(ДеревоМетаданных, пИмяЭлемента, ЕстьСтандартныйРеквизит)
	
	Уровень0 = ДеревоМетаданных.Строки.Добавить();
	Уровень0.Имя     = пИмяЭлемента;
	Уровень0.Синоним = пИмяЭлемента;
	КолУровень0 = 0;
	
	Для каждого Элем Из Метаданные[пИмяЭлемента] Цикл
		
		Уровень1 = Уровень0.Строки.Добавить();
		Уровень1.Имя     = Элем.Имя;
		Уровень1.Синоним = Элем.Синоним;
		КолУровень0 = КолУровень0 + 1;
		КолУровень1 = 0;
		
		Если пИмяЭлемента = "Документы" Тогда
			Попытка
				ДанныеДок = ДанныеДокументов(Элем.Имя);
				Уровень1.КоличествоУдаленных     = ДанныеДок.Удаленных;
				Уровень1.КоличествоНеУдаленных = ДанныеДок.НЕУдаленных;
				Уровень1.ДатаПоследнего = ДанныеДок.ДатаПоследнего;
			Исключение
				СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
		
		Если ЕстьСтандартныйРеквизит Тогда
			
			Для каждого Реквизит Из Элем.СтандартныеРеквизиты Цикл
				
				Уровень2         = Уровень1.Строки.Добавить();
				Уровень2.Имя     = Реквизит.Имя;
				Уровень2.Синоним = Реквизит.Синоним;
				Уровень2.Тип     = СформироватьОписаниеРеквизита(Реквизит);
				Уровень2.Коммент = Реквизит.Комментарий;
				КолУровень1      = КолУровень1 + 1;
				
			КонецЦикла;  
			
		КонецЕсли;
		
		Для каждого Реквизит Из Элем.Реквизиты Цикл
			
			Уровень2         = Уровень1.Строки.Добавить();
			Уровень2.Имя     = Реквизит.Имя;
			Уровень2.Синоним = Реквизит.Синоним;
			Уровень2.Тип     = СформироватьОписаниеРеквизита(Реквизит);
			Уровень2.Коммент = Реквизит.Комментарий;
			КолУровень1      = КолУровень1 + 1;
			
		КонецЦикла;
		
		Уровень1.Имя     = Элем.Имя + " (" + КолУровень1 + ")";
		Уровень1.КолРеквизитов = Формат(КолУровень1, "ЧЦ=2; ЧВН=");
		
		Для каждого Табчасть Из Элем.ТабличныеЧасти Цикл
			Уровень2     = Уровень1.Строки.Добавить();
			Уровень2.Имя = табЧасть.имя;
			Уровень2.Синоним = табЧасть.Синоним;
			КолУровень2 = 0;
			Для каждого Реквизит Из Табчасть.Реквизиты Цикл
				Уровень3         = Уровень2.Строки.Добавить();
				Уровень3.Имя     = Реквизит.Имя;
				Уровень3.Синоним = Реквизит.Синоним;
				Уровень3.Тип     = СформироватьОписаниеРеквизита(Реквизит);
				Уровень3.Коммент = Реквизит.Комментарий;
				КолУровень2      = КолУровень2 + 1;
				
			КонецЦикла;
			Уровень2.Имя = табЧасть.имя + " (" + КолУровень2 + ")";
			Уровень2.КолРеквизитов = Формат(КолУровень2, "ЧЦ=2; ЧВН=");
			
		КонецЦикла;
		
	КонецЦикла;
	Уровень0.Имя = пИмяЭлемента + " (" + КолУровень0 + ")";
	Уровень0.КолРеквизитов = Формат(КолУровень0, "ЧЦ=3; ЧВН=");
	
	Уровень0.Строки.Сортировать("Синоним ВОЗР", Ложь);
	
КонецПроцедуры

&НаСервере
Функция ДанныеДокументов(ИмяДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПланированиеПлатежей.Дата) КАК ДатаПоследнего,
	|	СУММА(ВЫБОР
	|			КОГДА ПланированиеПлатежей.ПометкаУдаления
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Удаленных,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПланированиеПлатежей.ПометкаУдаления
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НЕУдаленных,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПланированиеПлатежей.Ссылка) КАК ИтогоДокументов
	|ИЗ
	|	Документ." + ИмяДокумента + " КАК ПланированиеПлатежей";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

&НаСервере
Функция СформироватьОписаниеРеквизита(Реквизит)
	
	ЗначениеТипа = Строка(Реквизит.Тип);
	
	Если Найти(ЗначениеТипа, "Строка") Тогда
		Описание     = "Строка (" + Реквизит.Тип.КвалификаторыСтроки.Длина + ")";
		ЗначениеТипа = СтрЗаменить(ЗначениеТипа, "Строка", Описание);
	КонецЕсли;
	
	Если Найти(ЗначениеТипа, "Число") Тогда
		Описание     = "Число (" + Реквизит.Тип.КвалификаторыЧисла.Разрядность + ", " + Реквизит.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти + ")";
		ЗначениеТипа = СтрЗаменить(ЗначениеТипа, "Число", Описание);
	КонецЕсли;
	
	Если Найти(ЗначениеТипа, "Дата") Тогда
		Описание     = "Дата (" + Реквизит.Тип.КвалификаторыДаты.ЧастиДаты + ")";
		ЗначениеТипа = СтрЗаменить(ЗначениеТипа, "Дата", Описание);
	КонецЕсли;
	
	Возврат ЗначениеТипа;
	
КонецФункции



&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(ТекстСообщения)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
	
КонецПроцедуры // СообщитьПользователю()

#КонецОбласти
