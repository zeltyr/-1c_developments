#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмяРегистра = "ТоварыНаСкладах";
	ДатаДок = ТекущаяДатаСеанса();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены обязательные поля");
		Возврат;
	КонецЕсли;
	
	ПараметрыДиалога = Новый Структура;
	ПараметрыДиалога.Вставить("Заголовок", НСтр("ru = 'Выберите файл xlsx'"));
	ПараметрыДиалога.Вставить("Фильтр", НСтр("ru='Файл xlsx (*.xlsx)|*.xlsx'"));
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьФайлЗавершение", ЭтотОбъект);
	ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Оповещение, ПараметрыДиалога, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлЗавершение(Знач РезультатПомещенияФайлов, Знач ДополнительныеПараметры) Экспорт
	
	Адрес = РезультатПомещенияФайлов.Хранение;
	ТекстОшибки = РезультатПомещенияФайлов.ОписаниеОшибки;
	ИмяВыбранногоФайла = РезультатПомещенияФайлов.Имя;
	
	Если ПустаяСтрока(ТекстОшибки) И ПустаяСтрока(Адрес) Тогда
		
		ТекстОшибки = НСтр("ru = 'Ошибка передачи файла на сервер'");
		
	КонецЕсли;
	
	
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
		
	КонецЕсли;
	
	ЗагрузкаВТабличныйДокументНаСервере(Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаВТабличныйДокументНаСервере(АдресДокументаВХранилище)
	
	ДанныеДокумента = ПолучитьИзВременногоХранилища(АдресДокументаВХранилище);
	ИмяФайла = КаталогВременныхФайлов() + "temp1с_001.xlsx";
	ДанныеДокумента.Записать(ИмяФайла);
	
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ИмяФайла);
	
	ОбластиТаб = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы);
	
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТаб);  
	Построитель.Выполнить();
	
	ТабДанные = Построитель.Результат.Выгрузить();	
	
	// получаем ссылки на товар
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.Артикул КАК Артикул
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Артикул В(&АртикулыНоменклатуры)
		|	И НЕ Номенклатура.ПометкаУдаления";
	
	АртикулыНоменклатуры = ТабДанные.ВыгрузитьКолонку("Артикул");
	Запрос.УстановитьПараметр("АртикулыНоменклатуры", АртикулыНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	ДанныеДляЗагрузки.Очистить();
	Для Каждого СтрокаТЧ из ТабДанные Цикл
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(СтрокаТЧ.Артикул, "Артикул") Тогда
			
			НовСтр = ДанныеДляЗагрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
			НовСтр.Склад = Склад;
			Остаток = Число(СтрокаТЧ.Остаток);
			НовСтр.ВидДвижения = ?(Остаток < 0, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
			НовСтр.ВНаличии = ?(Остаток < 0, -1, 1) * Остаток;
			НовСтр.Период = ДатаДок;
		Иначе
			
			ТекстОшибки = НСтр("ru='Не найден артикул: %1'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СтрокаТЧ.Артикул);
			ОбщегоНазначения.СообщитьПользователю("Не найден артикул: %1");
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	
КонецПроцедуры



&НаКлиенте
Процедура СоздатьКорректировку(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены обязательные поля");
		Возврат;
	КонецЕсли;
	
	СоздатьКорректировкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьКорректировкуНаСервере()
	
	ДокКорректировка = Документы.КорректировкаРегистров.СоздатьДокумент();
	ДокКорректировка.Дата = ДатаДок;
	ДокКорректировка.Ответственный = Пользователи.ТекущийПользователь();
	ДокКорректировка.Комментарий = "автоматическая корректировка регистра по файлу Excel";
	ДокКорректировка.Операция = Перечисления.ОперацииКорректировкиРегистров.РучнаяКорректировка;
	
	НовСтр = ДокКорректировка.ТаблицаРегистров.Добавить();
	НовСтр.Имя = ИмяРегистра;
	
	Отказ = Ложь;
	Попытка
		ДокКорректировка.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	НаборДвижений = Регистрынакопления[ИмяРегистра].СоздатьНаборЗаписей();
	Если ЛОжь Тогда
		НаборДвижений = РегистрыНакопления.СвободныеОстатки.СоздатьНаборЗаписей();
	КонецЕсли;
	НаборДвижений.Отбор.Регистратор.Установить(ДокКорректировка.Ссылка);
	НаборДвижений.Прочитать();
	
	Для Каждого СТрокаТЧ из ДанныеДляЗагрузки Цикл
		НоваяЗапись = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТЧ);
	КонецЦикла;
	НаборДвижений.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


#КонецОбласти



