#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МаксимальноеЧислоЗаписей = 10000;
	УниверсальныеШаблоныПоиска();
	ПорцииДляУдаления = 15000;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Анализ(Команда)
	
	АнализНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСУчетомШаблонов(Команда)
	
	УдалитьСистемныеНастройкиПользователя(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеНастройки(Команда)
	
	УдалитьСистемныеНастройкиПользователя(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИсториюРаботыПользователей(Команда)
	ИсторияРаботыПользователя.ОчиститьВсе();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ИНИЦИАЛИЗАЦИЯ

&НаСервере
Процедура УниверсальныеШаблоныПоиска()

	НовСтрока = НастройкиДляАнализа.Добавить();
	НовСтрока.Использовать = Ложь;
	НовСтрока.ШаблонПоиска = "ОбщаяФорма.Вопрос";
	НовСтрока.ЭтоИмяФормы = Истина;
	
	НовСтрока = НастройкиДляАнализа.Добавить();
	НовСтрока.Использовать = Ложь;
	НовСтрока.ШаблонПоиска = "ОбщаяФорма.ВводКомментария";
	НовСтрока.ЭтоИмяФормы = Истина;
	
	НовСтрока = НастройкиДляАнализа.Добавить();
	НовСтрока.Использовать = Ложь;
	НовСтрока.ШаблонПоиска = "НастройкиОкна";
	НовСтрока.ЭтоИмяФормы = Ложь;
	
	НовСтрока = НастройкиДляАнализа.Добавить();
	НовСтрока.Использовать = Ложь;
	НовСтрока.ШаблонПоиска = "ИсторияПоискаТаблицы";
	НовСтрока.ЭтоИмяФормы = Ложь;
	
	НовСтрока = НастройкиДляАнализа.Добавить();
	НовСтрока.Использовать = Ложь;
	НовСтрока.ШаблонПоиска = "КлючНаборовСвойств";
	НовСтрока.ЭтоИмяФормы = Ложь;

КонецПроцедуры

// АНАЛИЗ

&НаСервере
Процедура АнализНаСервере()
	
	СистемныеНастройки = ПолучитьСистемныеНастройкиИзИБ(МаксимальноеЧислоЗаписей);
	ВывестиСистемныеНастройкиПользователю(СистемныеНастройки);
	ПроанализироватьШаблоныСистемныхНастроек(СистемныеНастройки);
	ОбновитьСтранцуРезультатыАнализа(СистемныеНастройки);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСистемныеНастройкиИзИБ(МаксимальноеЧислоЗаписей)
	
	ОтборыСистемныхНастроек = ПодготовитьОтборыДляСистемныхНастроек();
	СистемныеНастройки = ТаблицаВыводаСистемныхНастроек();
	ВсегоЗаписей = 0;
	
	СистемныеНастройкиИзИБ = ХранилищеСистемныхНастроек.Выбрать(ОтборыСистемныхНастроек);
	Пока СистемныеНастройкиИзИБ.Следующий() Цикл
		СтрокаНастройки = СистемныеНастройки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНастройки, СистемныеНастройкиИзИБ);
		Если ВсегоЗаписей >= МаксимальноеЧислоЗаписей Тогда
			Прервать; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат СистемныеНастройки;
	
КонецФункции

&НаСервере
Процедура ВывестиСистемныеНастройкиПользователю(СистемныеНастройки)
	
	ПострПечать = Новый ПостроительОтчета;
	ПострПечать.ИсточникДанных = Новый ОписаниеИсточникаДанных(СистемныеНастройки);
	ПострПечать.Выполнить();
	Для каждого Колонка Из ПострПечать.ВыбранныеПоля Цикл
		Колонка.Представление = СистемныеНастройки.Колонки[Колонка.Имя].Заголовок;
	КонецЦикла;
	ПострПечать.Вывести(ТабДок);
	РасчетШириныКолонок(ТабДок);

КонецПроцедуры

&НаСервере
Процедура ПроанализироватьШаблоныСистемныхНастроек(СистемныеНастройки)
	
	СброситьНайденоПоШаблону();
	
	ШаблоныДляАнализа = ПолучитьШаблоныОчисткиПоТаблице(Истина);
	Если ШаблоныДляАнализа.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СистемнаяНастройка ИЗ СистемныеНастройки Цикл
		
		Для каждого ДанныеШаблонаПоиска ИЗ ШаблоныДляАнализа Цикл
			
			СтрокаПодходит = СтрокаПодходитПодШаблонПоиска(СистемнаяНастройка, ДанныеШаблонаПоиска);
			Если СтрокаПодходит Тогда
				ДанныеШаблонаПоиска.НайденоПоШаблону = ДанныеШаблонаПоиска.НайденоПоШаблону + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого НастройкаДляАнализа ИЗ НастройкиДляАнализа Цикл
		
		Для каждого ДанныеШаблонаПоиска ИЗ ШаблоныДляАнализа Цикл
			
			Если НастройкаДляАнализа.ШаблонПоиска = ДанныеШаблонаПоиска.ШаблонПоиска Тогда
				НастройкаДляАнализа.НайденоПоШаблону = НастройкаДляАнализа.НайденоПоШаблону + ДанныеШаблонаПоиска.НайденоПоШаблону;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СтрокаПодходитПодШаблонПоиска(СистемнаяНастройка, ДанныеШаблонаПоиска)
	
	СтрокаПоиска = СистемнаяНастройка.КлючОбъекта;
	ШаблонПоиска = ДанныеШаблонаПоиска.ПодстрокаШаблона;
	
	ШаблонПодходит = СтрНайти(СтрокаПоиска, ДанныеШаблонаПоиска.ШаблонПоиска);
	ДлинаПодходит = Истина;
	Если ДанныеШаблонаПоиска.ДлинаКлюча <> 0 Тогда
		ДлинаПодходит = СтрДлина(СистемнаяНастройка.КлючОбъекта) = ДанныеШаблонаПоиска.ДлинаКлюча;
	КонецЕсли;
	
	СтрокаПодходит = Ложь;
	Если ШаблонПодходит И ДлинаПодходит Тогда
		СтрокаПодходит = Истина;
	КонецЕсли;
	Возврат СтрокаПодходит;
	
КонецФункции

&НаСервере
Функция ПодготовитьОтборыДляСистемныхНастроек()
	
	ОтборыСистемныхНастроек = Новый Структура;
	Если ЗначениеЗаполнено(ВыбрПользователь) Тогда
		ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыбрПользователь, "ИдентификаторПользователяИБ");
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
		ИмяПользователя = ПользовательИБ.Имя;
		ОтборыСистемныхНастроек.Вставить("Пользователь", ПользовательИБ.Имя);
	КонецЕсли;
	Возврат ОтборыСистемныхНастроек;
	
КонецФункции

&НаСервере
Функция ТаблицаВыводаСистемныхНастроек()
	
	ТаблицаВыводаСистемныхНастроек = Новый ТаблицаЗначений;
	ТаблицаВыводаСистемныхНастроек.Колонки.Добавить("Пользователь", , "Пользователь");
	ТаблицаВыводаСистемныхНастроек.Колонки.Добавить("КлючОбъекта", , "Ключ объекта");
	ТаблицаВыводаСистемныхНастроек.Колонки.Добавить("КлючНастроек", , "Ключ настроек");
	ТаблицаВыводаСистемныхНастроек.Колонки.Добавить("Представление", , "Представление");
	Возврат ТаблицаВыводаСистемныхНастроек;
	
КонецФункции

&НаСервере
Процедура СброситьНайденоПоШаблону()
	
	Для каждого ЭлементКоллекции ИЗ НастройкиДляАнализа Цикл
		
		ЭлементКоллекции.НайденоПоШаблону = 0;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтранцуРезультатыАнализа(СистемныеНастройки)
	
	Элементы.СтраницаРезультатыАнализа.Заголовок = "Результаты анализа (" + СистемныеНастройки.Количество() + ")";
	
КонецПроцедуры


// ОЧИСТКА

&НаСервере
Процедура УдалитьСистемныеНастройкиПользователя(ПрименятьШаблон)
	
	Если ПрименятьШаблон Тогда
		МассивШаблонов = ПолучитьШаблоныОчисткиПоТаблице();
	КонецЕсли;
	
	Счетчик = 0;
	
	ОтборыСистемныхНастроек = ПодготовитьОтборыДляСистемныхНастроек();
	СистемныеНастройки = ТаблицаВыводаСистемныхНастроек();

	СистемнаяНастройка = ХранилищеСистемныхНастроек.Выбрать(ОтборыСистемныхНастроек);
	Пока СистемнаяНастройка.Следующий() Цикл
		
		Если ПрименятьШаблон Тогда
			
			СтрокаПодходит = Ложь;
			Для Каждого ДанныеШаблонаПоиска Из МассивШаблонов Цикл
				
				ЭлемШаблонаПодходит = СтрокаПодходитПодШаблонПоиска(СистемнаяНастройка, ДанныеШаблонаПоиска);
				Если ЭлемШаблонаПодходит Тогда
					СтрокаПодходит = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			СтрокаПодходит = Истина;
			
		КонецЕсли;
		
		Если СтрокаПодходит Тогда
			
			НоваяСтрока = СистемныеНастройки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СистемнаяНастройка);
			
		КонецЕсли;

		Счетчик = Счетчик + 1;
		Если Счетчик >= ПорцииДляУдаления Тогда 
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого стр Из СистемныеНастройки Цикл
		ХранилищеСистемныхНастроек.Удалить(стр.КлючОбъекта, стр.КлючНастроек, стр.Пользователь);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШаблоныОчисткиПоТаблице(ИгнорироватьФлагИспользовать = Ложь)
	
	// Ключи настроек форм имеют примерно такой вид:
	// "ОбщаяФорма.ВводКомментария/0131c7c6_c847_4b9f_aff5_e466aaf2111d/НастройкиОкна"
	// "ОбщаяФорма.Вопрос/0131c7c6_c847_4b9f_aff5_e466aaf2626d/НастройкиОкна"
	// "ОбщаяФорма.Вопрос/0131c7c6_c847_4b9f_aff5_e466aaf2626d/Такси/НастройкиОкна"
	// Для каждой формы могут быть отдельные настройки для Такси и для старого управляемого интерфейса.
	
	МассивШаблонов = Новый Массив();
	
	ШаблонКлючаУпрПриложение = "/0131c7c6_c847_4b9f_aff5_e466aaf2626d/НастройкиОкна";
	ШаблонКлючаТакси = "/0131c7c6_c847_4b9f_aff5_e466aaf2626d/Такси/НастройкиОкна";
	
	ДлинаКлючаУпрПриложение = СтрДлина(ШаблонКлючаУпрПриложение);
	ДлинаКлючаТакси =  СтрДлина(ШаблонКлючаТакси);

	Для Каждого Стр Из НастройкиДляАнализа Цикл
		
		Если НЕ ИгнорироватьФлагИспользовать И НЕ Стр.Использовать Тогда
			Продолжить;
		КонецЕсли;
		
		ШаблонПоиска = Стр.ШаблонПоиска;
		ДлинаШаблона = 0;
		
		Если Стр.ЭтоИмяФормы Тогда
			
			ШаблонПоиска= ШаблонПоиска + "/";
			
			ДлинаШаблона = СтрДлина(Стр.ШаблонПоиска);
			
			ДлинаШаблонаУпрПриложение = ДлинаШаблона + ДлинаКлючаУпрПриложение;
			ДлинаШаблонаТакси = ДлинаШаблона + ДлинаКлючаТакси;
			
			НовШаблон = Новый Структура("ШаблонПоиска, ПодстрокаШаблона, ДлинаКлюча, НайденоПоШаблону", 
				Стр.ШаблонПоиска, 
				ШаблонПоиска, 
				ДлинаШаблонаУпрПриложение,
				0);
			МассивШаблонов.Добавить(НовШаблон);
			
			НовШаблон = Новый Структура("ШаблонПоиска, ПодстрокаШаблона, ДлинаКлюча, НайденоПоШаблону", 
				Стр.ШаблонПоиска, 
				ШаблонПоиска, 
				ДлинаШаблонаТакси,
				0);
			МассивШаблонов.Добавить(НовШаблон);
			
		Иначе
			
			НовШаблон = Новый Структура("ШаблонПоиска, ПодстрокаШаблона, ДлинаКлюча, НайденоПоШаблону", 
				Стр.ШаблонПоиска, 
				ШаблонПоиска, 
				ДлинаШаблона,
				0);
			МассивШаблонов.Добавить(НовШаблон);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивШаблонов;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура ОчиститьВсеНастройкиНеСуществующихПользователей(Команда)
	ОчиститьВсеНастройкиНеСуществующихПользователейНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОчиститьВсеНастройкиНеСуществующихПользователейНаСервере()
	
	ТаблицаРезультатов = ТаблицаВыводаСистемныхНастроек();
	ИменаПользователей = ПолучитьИменаАктуальныхПользователей();
	
	Выб = ХранилищеСистемныхНастроек.Выбрать();
	Счетчик = 0;
	Пока Выб.Следующий() Цикл
		Если Выб.Пользователь <> "" 
			И ИменаПользователей.Найти(Выб.Пользователь) = Неопределено Тогда
			
			НоваяСтрока = ТаблицаРезультатов.Добавить();
			НоваяСтрока.Пользователь = Выб.Пользователь;
			НоваяСтрока.КлючОбъекта = Выб.КлючОбъекта;
			НоваяСтрока.КлючНастроек = Выб.КлючНастроек;
			НоваяСтрока.Представление = Выб.Представление;
			
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если Счетчик >= ПорцииДляУдаления Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
	Для каждого стр Из ТаблицаРезультатов Цикл
		ХранилищеСистемныхНастроек.Удалить(стр.КлючОбъекта, стр.КлючНастроек, стр.Пользователь);	
	КонецЦикла;
	 
	Сообщить("Удалено настроек: " + Счетчик);

КонецПроцедуры

&НаСервере
Функция ПолучитьИменаАктуальныхПользователей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.ПометкаУдаления";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПользователи = РезультатЗапроса.Выбрать();
	
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	ИменаПользователей = Новый Массив;
	Для Каждого ПользовательИБ из ПользователиИБ Цикл
		
		ВыборкаПользователи.Сбросить();
		Если ВыборкаПользователи.НайтиСледующий(ПользовательИБ.УникальныйИдентификатор, "ИдентификаторПользователяИБ") Тогда
			ИменаПользователей.Добавить(ПользовательИБ.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИменаПользователей;
	
КонецФункции

// взято отсюда - https://helpf.pro/faq/view/417.html
&НаСервере
Процедура РасчетШириныКолонок(ТабличныйДокумент)
	
	Перем МаксимальноеКоличествоСтрок, МаксимальнаяШиринаКолонки;
	Перем КонечнаяСтрока, НачальнаяСтрока, ТекущаяКолонка, ТекущаяСтрока, НачалоДанных;
	Перем ОбластьШапки, ОбластьПодвала;
	Перем ШиринаКолонки, ТекстЯчейки, НомерСтрокиТекста;
	Перем КоличествоУровнейГруппировокСтрок, Отступ;
	Перем ШириныКолонок;
	
	// Максимальное количество строк отчета, которые будут использованы для расчета ширин колонок
	
	МаксимальноеКоличествоСтрок = 50;
	// Ограничение максимальной ширины колонки
	
	МаксимальнаяШиринаКолонки = 50;
	// Массив, в который будут помещаться ширины колонок
	
	ШириныКолонок = Новый Массив;
	// Получим количество уровней группировок в отчете для учета автоматического отступа
	
	КоличествоУровнейГруппировокСтрок = ТабличныйДокумент.КоличествоУровнейГруппировокСтрок();
	
	// Инициализируем начальные строки
	
	НачальнаяСтрока = 0;
	НачалоДанных = 0;
	
	// Найдем в результирующем документе область шапки таблицы
	
	ОбластьШапки = ТабличныйДокумент.Области.Найти("ШапкаТаблицы");
	Если ТипЗнч(ОбластьШапки) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		
		// Из шапки таблицы получим начальную строку с которой будем рассчитывать ширины
		НачальнаяСтрока = ОбластьШапки.Верх;
		НачалоДанных = ОбластьШапки.Низ + 1;
	Иначе
		
		// Если область шапки таблицы не найдена, найдем область шапки строк
		ОбластьШапки = ТабличныйДокумент.Области.Найти("ШапкаСтрок");
		Если ТипЗнч(ОбластьШапки) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
			
			// Из шапки таблицы получим начальную строку с которой будем рассчитывать ширины
			НачальнаяСтрока = ОбластьШапки.Верх;
			НачалоДанных = ОбластьШапки.Низ + 1;
			
		КонецЕсли;
	КонецЕсли;
	
	// Получим область подвала отчета и вычислим конечную строку расчета
	
	ОбластьПодвала = ТабличныйДокумент.Области.Найти("Подвал");
	Если ТипЗнч(ОбластьПодвала) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		// Область подвала найдена
		КонечнаяСтрока = ОбластьПодвала.Верх - 1;
		Если КонечнаяСтрока - НачальнаяСтрока > МаксимальноеКоличествоСтрок Тогда
			КонечнаяСтрока = НачальнаяСтрока + МаксимальноеКоличествоСтрок;
		КонецЕсли;
	Иначе 
		// Область подвала не найдена
		КонечнаяСтрока = НачальнаяСтрока + МаксимальноеКоличествоСтрок;
	КонецЕсли;
	
	// Ограничим конечную строку
	КонечнаяСтрока = Мин(КонечнаяСтрока, ТабличныйДокумент.ВысотаТаблицы);
	// Переберем все колонки отчета
	Для ТекущаяКолонка = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		АвтоОтступ = 0;
		// Переберем строки, которые будут использованы для расчета ширин колонок
		Для ТекущаяСтрока = НачальнаяСтрока По КонечнаяСтрока Цикл
			ШиринаКолонки = 0;
			// Получим область текущей ячейки
			ОбластьЯчейки = ТабличныйДокумент.Область(ТекущаяСтрока, ТекущаяКолонка);
			Если ОбластьЯчейки.Лево <> ТекущаяКолонка Или ОбластьЯчейки.Верх <> ТекущаяСтрока Тогда
				// Данная ячейка принадлежит объединенным ячейкам и не является начальной ячейкой
				Продолжить;
			КонецЕсли;
			Если КоличествоУровнейГруппировокСтрок > 0 И ТекущаяСтрока = НачалоДанных Тогда
				// Для первой строки с данными получим значение автоотступа
				АвтоОтступ = ОбластьЯчейки.АвтоОтступ;
			КонецЕсли;
			// Получим текст ячейки
			ТекстЯчейки = ОбластьЯчейки.Текст;
			// Для каждой строки из текста ячейки рассчитаем количество символов в строке
			Для НомерСтрокиТекста = 1 По СтрЧислоСтрок(ТекстЯчейки) Цикл
				ШиринаТекстаЯчейки = СтрДлина(СтрПолучитьСтроку(ТекстЯчейки, НомерСтрокиТекста));
				// Если используется автоотступ, то прибавим к ширине ячейки его величину
				Если АвтоОтступ <> Неопределено И АвтоОтступ > 0 Тогда
					ШиринаТекстаЯчейки = ШиринаТекстаЯчейки + КоличествоУровнейГруппировокСтрок * АвтоОтступ;
				КонецЕсли;
				ШиринаКолонки = Макс(ШиринаКолонки, ШиринаТекстаЯчейки);
			КонецЦикла;
			
			Если ШиринаКолонки > МаксимальнаяШиринаКолонки Тогда
				// Ограничим ширину колонки
				ШиринаКолонки = МаксимальнаяШиринаКолонки;
			КонецЕсли;
			Если ШиринаКолонки <> 0 Тогда
				// Ширина колонки рассчитана
				// Определим, сколько ячеек по ширине используется в области для текущей ячейки
				КоличествоКолонок = ОбластьЯчейки.Право - ОбластьЯчейки.Лево;
				// Переберем все ячейки, расположенные в области
				Для НомерКолонки = 0 По КоличествоКолонок Цикл
					Если ШириныКолонок.ВГраница() > ТекущаяКолонка - 1 + НомерКолонки Тогда
						// В массиве ширин колонок уже был элемент для текущей колонки
						Если ШириныКолонок[ТекущаяКолонка - 1 + НомерКолонки] = Неопределено Тогда
							// Значение ширины колонки еще не было установлено
							ШириныКолонок[ТекущаяКолонка - 1 + НомерКолонки] = ШиринаКолонки / (КоличествоКолонок + 1);
						Иначе
							// Значение ширины колонки уже было установлено
							// Вычислим максимум ширины колонки
							ШириныКолонок[ТекущаяКолонка - 1 + НомерКолонки] = 
							Макс(ШириныКолонок[ТекущаяКолонка - 1 + НомерКолонки], ШиринаКолонки / (КоличествоКолонок + 1));
						КонецЕсли;
					Иначе
						// В массиве ширин колонок еще не было элемента для данной колонки
						// Добавим элемент в массив ширин колонок
						ШириныКолонок.Вставить(ТекущаяКолонка - 1 + НомерКолонки, ШиринаКолонки / (КоличествоКолонок + 1));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;    // Конец цикла перебора строк
	КонецЦикла;    // Конец цикла перебора колонок
	
	// Переберем все элементы в массиве вычисленных ширин колонок
	Для ТекущаяКолонка = 0 По ШириныКолонок.ВГраница() Цикл
		Если ШириныКолонок[ТекущаяКолонка] <> Неопределено Тогда
			// Ширина колонок установлена
			// Установим ширину области ячеек
			ТабличныйДокумент.Область(, ТекущаяКолонка + 1, НачалоДанных, ТекущаяКолонка + 1).ШиринаКолонки = ШириныКолонок[ТекущаяКолонка] + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
