
&ИзменениеИКонтроль("СформироватьПФ")
Функция ДПЗ_СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВывестиПланОплаты)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;

	Макет = УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент = ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати = Новый Структура;
	ЕстьТЧЗапасы = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧРаботыУслуги = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	ЕстьТЧПланОплаты = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаПланаОплат") <> Неопределено);
	ПредставлениеСкидки = Константы.ПредставлениеСкидкиВПечатнойФорме.Получить();
	ШаблонСообщенийВариантов = НСтр(
	"ru='Печатная форма ""%1"" (%2) не может быть сформирована: не выбран основной вариант.'");
	ОбластиМакета = Новый Структура;
	ТаблицаОписанияОбластей= ШаблонТаблицыОписанияОбластейЛоготипа();
	ОписаниеПечатнойФормы.ИмяФайлаПечатнойФормы = Новый Соответствие;

	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл

		Если ТипЗнч(ДанныеОбъекта.Ссылка) = Тип("ДокументСсылка.ЗаказПокупателя")
			И ДанныеОбъекта.ОжидаетсяВыборВариантаКП Тогда

			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(ШаблонСообщенийВариантов,
			ОписаниеПечатнойФормы.СинонимМакета, ДанныеОбъекта.Ссылка), ДанныеОбъекта.Ссылка);
			Продолжить;

		КонецЕсли;

		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало,
		ДанныеПечати);

		СведенияОбОрганизации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеОбъекта.Организация,
		ДанныеОбъекта.ДатаДокумента, , ДанныеОбъекта.БанковскийСчет);
		СведенияОбКонтрагенте = ПечатьДокументовУНФ.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент,
		ДанныеОбъекта.ДатаДокумента, , );

		// :::Логотип, реквизиты

		// Если макет поддерживает QR код
		Если Макет.Области.Найти("QRКод") <> Неопределено Тогда
			ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеОбъекта.Контрагент, "ВидКонтрагента");

			Если ЮрФизЛицо = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель
				ИЛИ ЮрФизЛицо = Перечисления.ВидыКонтрагентов.ФизическоеЛицо Тогда

				Если ИнтеграцияСПлатежнымиСистемами.ИнтеграцияДоступна() Тогда
					НастройкиСБП = ИнтеграцияСПлатежнымиСистемами.ТорговыеТочкиОперации(ДанныеОбъекта.Ссылка);
				Иначе
					НастройкиСБП = Новый Массив;
				КонецЕсли;

				Если НастройкиСБП.Количество() Тогда

					НастройкаСБП		  = НастройкиСБП[0];
					ИдентификаторОплаты   = ИнтеграцияСПлатежнымиСистемами.ИдентификаторОплаты(
					ДанныеОбъекта.Ссылка,
					НастройкаСБП);

					ДанныеQRКодаСтруктура = ИнтеграцияСПлатежнымиСистемамиУНФ.СформироватьДанныеQRКода(
					НастройкаСБП,
					ИдентификаторОплаты.QRКод,
					,
					190);

					ДвоичныеДанныеQRКода  = ПолучитьИзВременногоХранилища(
					ДанныеQRКодаСтруктура.ДанныеQRКода);

				Иначе

					ДвоичныеДанныеQRКода  = QRКодРеквизитыПлатежа(
					ДанныеОбъекта, 
					СведенияОбОрганизации, 
					ЕстьТЧЗапасы, 
					ЕстьТЧРаботыУслуги, 
					ЕстьТЧПланОплаты, 
					ВывестиПланОплаты);

				КонецЕсли;

			КонецЕсли;

			ЕстьQR = ЗначениеЗаполнено(ДвоичныеДанныеQRКода);
			ОбластьРеквизиты = Макет.Область("РеквизитыПраво");
			Если НЕ ЕстьQR Тогда
				ОбластьРеквизиты.ШиринаКолонки = ОбластьРеквизиты.ШиринаКолонки + Макет.Область("QRКод").ШиринаКолонки;
			КонецЕсли;
		Иначе
			ЕстьQR = Ложь;
		КонецЕсли;

		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаглавиеСЛоготипом", Истина, Истина, 1);
		ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаглавиеБезЛоготипа", Ложь, Истина, 2);
		Если Макет.Области.Найти("QRКод") <> Неопределено Тогда
			ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчетаСЛоготипом|Реквизиты", Истина, Ложь, 3);
			ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчета|Реквизиты", Ложь, Ложь, 4);
		Иначе
			ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчетаСЛоготипом", Истина, Ложь, 3);
			ДобавитьОписаниеОбластиЛоготипа(ТаблицаОписанияОбластей, Макет, "ЗаголовокСчета", Ложь, Ложь, 4);
			ТекстСообщения = НСтр(
			"ru = 'Изменился типовой макет печатной формы Счет на оплату. Для корректной
			|работы печатной формы необходимо обновить отредактированный ранее макет. 
			|Это можно выполнить самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
			|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");

			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;

		СтрокаСвойствОбластиМакета = ЗаполнитьОбластьЗаголовкаСчетовЗаказовИРазместитьЛоготип(ДанныеОбъекта,
		ТаблицаОписанияОбластей, Ошибки);

		Если СтрокаСвойствОбластиМакета <> Неопределено Тогда

			// Если макет поддерживает QR код
			Если Макет.Области.Найти("QRКод") <> Неопределено Тогда

				ОбластьQR      = Макет.ПолучитьОбласть("ЗаголовокСчета|QRКод");
				ОбластьРисунка = ОбластьQR.Области.Найти("РисунокQR");

			КонецЕсли;

			Если ЗначениеЗаполнено(СведенияОбОрганизации.Банк) Тогда

				ДанныеПечати.Вставить("БанкПолучателяПредставление", СведенияОбОрганизации.Банк.Наименование + " "
				+ СведенияОбОрганизации.Банк.Город);

			КонецЕсли;

			ДанныеПечати.Вставить("ИНН", СведенияОбОрганизации.ИНН);
			ДанныеПечати.Вставить("КПП", СведенияОбОрганизации.КПП);

			ПредставлениеПоставщика = ?(ПустаяСтрока(СведенияОбОрганизации.ТекстКорреспондента),
			СведенияОбОрганизации.ПолноеНаименование, СведенияОбОрганизации.ТекстКорреспондента);
			ДанныеПечати.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
			ДанныеПечати.Вставить("БИКБанкаПолучателя", СведенияОбОрганизации.БИК);
			ДанныеПечати.Вставить("СчетБанкаПолучателяПредставление", СведенияОбОрганизации.КоррСчет);
			ДанныеПечати.Вставить("СчетПолучателяПредставление", СведенияОбОрганизации.НомерСчета);

			СтрокаСвойствОбластиМакета.ОбластьМакета.Параметры.Заполнить(ДанныеПечати);

			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет,
			СтрокаСвойствОбластиМакета.ОбластьМакета, ДанныеОбъекта.Ссылка);

			Если Макет.Области.Найти("ОтступЗаголовка") <> Неопределено Тогда
				ОбластьОтступ = Макет.ПолучитьОбласть("ОтступЗаголовка");
				ТабличныйДокумент.Вывести(ОбластьОтступ);
			КонецЕсли;

			НачалоНовогоФормата = ТабличныйДокумент.ВысотаТаблицы;

			ТабличныйДокумент.Вывести(СтрокаСвойствОбластиМакета.ОбластьМакета);

			Если ЕстьQR И ОбластьРисунка <> Неопределено Тогда
				ОбластьРисунка.Картинка = Новый Картинка(ДвоичныеДанныеQRКода);
				ТабличныйДокумент.Присоединить(ОбластьQR);
			КонецЕсли;

			ТабличныйДокумент.Область(НачалоНовогоФормата+1,,ТабличныйДокумент.ВысотаТаблицы).СоздатьФорматСтрок();

		КонецЕсли;

		// :::Заголовок
		НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента,
		ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
		Постфикс = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, НСтр("ru ='(факсимиле)'"), "");

		ПредставлениеДокументаДляСохранения = СокрЛП(СтрШаблон(НСтр("ru ='Счет на оплату № %1 от %2 %3'"),
		НомерДокумента, Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD"), Постфикс));
		ПредставлениеДокументаДляПечати = СокрЛП(СтрШаблон(НСтр("ru ='Счет на оплату № %1 от %2'"), НомерДокумента,
		Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD")));

		ОписаниеПечатнойФормы.ИмяФайлаПечатнойФормы.Вставить(ДанныеОбъекта.Ссылка, ПредставлениеДокументаДляСохранения);

		ОбластьЗаголовок = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Заголовок", "", Ошибки);
		Если ОбластьЗаголовок <> Неопределено Тогда

			ДанныеПечати.Вставить("ПредставлениеДокумента", ПредставлениеДокументаДляПечати);
			ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);

		КонецЕсли;

		// :::Поставщик
		ОбластьПоставщик = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Поставщик", "", Ошибки);
		Если ОбластьПоставщик <> Неопределено Тогда

			ДанныеПечати.Вставить("ПредставлениеПоставщика", ПечатьДокументовУНФ.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			ОбластьПоставщик.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьПоставщик);

		КонецЕсли;

		// :::Покупатель
		ОбластьПокупатель = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Покупатель", "", Ошибки);
		Если ОбластьПокупатель <> Неопределено Тогда

			ДанныеПечати.Вставить("ПредставлениеПолучателя", ПечатьДокументовУНФ.ОписаниеОрганизации(
			СведенияОбКонтрагенте, "ПолноеНаименование,ИНН,КПП,РегистрационныйНомер,ЮридическийАдрес,Телефоны,"));
			ДанныеПечати.Вставить("ОснованиеПечати", ДанныеОбъекта.ОснованиеПечати);

			ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьПокупатель);

		КонецЕсли;

		// :::Шапка таблицы
		ОбластиМакета.Очистить();
		ОбластиМакета.Вставить("НомерСтраницы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "НомерСтраницы",
		НСтр("ru ='Номер страницы'"), Ошибки));

		СкидкаПоЗапасам = 0;
		Если ЕстьТЧЗапасы Тогда

			СкидкаПоЗапасам = ДанныеОбъекта.ТаблицаЗапасы.Итог("ЕстьСкидка");

		КонецЕсли;

		СкидкаПоРаботам = 0;
		Если ЕстьТЧРаботыУслуги Тогда

			СкидкаПоРаботам = ДанныеОбъекта.ТаблицаРаботыУслуги.Итог("ЕстьСкидка");

		КонецЕсли;

		ЕстьСкидки = ((СкидкаПоЗапасам + СкидкаПоРаботам) <> 0);

		ИмяОбласти = ?(ЕстьСкидки, "ШапкаТаблицыСоСкидкой", "ШапкаТаблицы");
		ОбластиМакета.Вставить("ОбластьМакетаЗаголовокТаблицы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		ИмяОбласти, "", Ошибки));
		Если ОбластиМакета.ОбластьМакетаЗаголовокТаблицы <> Неопределено Тогда

			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);

		КонецЕсли;

		// :::Табличные части
		ОбластиМакета.Вставить("ОбластьМакетаИтогоПоСтранице", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ИтогоПоСтранице", НСтр("ru ='Итоги по странице'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоПоДокументу", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"Итого", "", Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоНДС_ЧО", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ИтогоНДСЧастичнаяОплата", НСтр("ru ='Итого НДС по частичной оплате'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоСкидка", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ИтогоСкидка", "", Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоКОплате", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ИтогоКОплате", НСтр("ru ='Итого к оплате'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаИтогоКОплатеСВесом", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ИтогоКОплатеСВесом", НСтр("ru ='Итого к оплате и вес'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаСуммаПрописью", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"СуммаПрописью", НСтр("ru ='Сумма прописью'"), Ошибки));
		ОбластиМакета.Вставить("ОбластьМакетаУсловия", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		"ДополнительныеУсловия", , Ошибки));

		ШаблонИмени 					= "Подписи%1%2";
		ПредставлениеПредприниматель	= ?(ДанныеОбъекта.ОрганизацияЮридическоеФизическоеЛицо
		= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, "Предпринимателя", "");
		ПредставлениеФаксимиле			= ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да,
		"СФаксимиле", "БезФаксимиле");

		ИмяОбласти = СтрШаблон(ШаблонИмени, ПредставлениеПредприниматель, ПредставлениеФаксимиле);
		ОбластиМакета.Вставить("ОбластьМакетаПодпись", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти,
		, Ошибки));

		ИмяОбласти = ?(ЕстьСкидки, "СтрокаСоСкидкой", "Строка");
		ОбластиМакета.Вставить("ОбластьМакетаСтрока", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти,
		"", Ошибки));

		ИмяОбласти = ?(ЕстьСкидки, "СтрокаСоСкидкойГруппировка", "СтрокаГруппировка");
		ОбластиМакета.Вставить("ОбластьМакетаРазделитель", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
		ИмяОбласти, "", Ошибки));

		ОбластиМакета.Вставить("ОбластьМакетаОтветственныйЗаОформлениеДокумента",
		ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Ответственный", "", Ошибки));

		Итоги = Новый Структура;
		Итоги.Вставить("НомерСтраницы", 1);
		Итоги.Вставить("Сумма", 0);
		Итоги.Вставить("СуммаНаСтранице", 0);
		Итоги.Вставить("СуммаНДС", 0);
		Итоги.Вставить("Всего", 0);
		Итоги.Вставить("Количество", 0);
		Итоги.Вставить("КоличествоНаСтранице", 0);
		Итоги.Вставить("НомерСтроки", 0);
		Итоги.Вставить("Вес", 0);
		Итоги.Вставить("СкидкаПоСтроке", 0);
		Итоги.Вставить("СкидкаПоДокументу", 0);
		Итоги.Вставить("ОбработаноСтрок", 0);
		Итоги.Вставить("КоличествоСтрок", 0);
		Итоги.Вставить("ЕстьСкидки", ЕстьСкидки);
		Итоги.Вставить("ЕстьСтавкаНольПроцентов", Ложь);
		Итоги.Вставить("ВывестиСекциюЧастичнаяОплата", (ВывестиПланОплаты И ЕстьТЧПланОплаты));
		Итоги.Вставить("ПредставлениеСкидки", ПредставлениеСкидки);
		Итоги.Вставить("КоличествоСтрокВОписанииУсловий", 0);
		Итоги.Вставить("ПредставлениеДокумента", ПредставлениеДокументаДляПечати);

		Итоги.КоличествоСтрок = КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ЕстьТЧРаботыУслуги, ЕстьТЧЗапасы);

		ТекстДополнительныхУсловий = "";
		Если ЗначениеЗаполнено(ДанныеОбъекта.ДополнительныеУсловия) Тогда

			ТекстДополнительныхУсловий = ДанныеОбъекта.ДополнительныеУсловия.ТекстУсловий;
			Итоги.КоличествоСтрокВОписанииУсловий = СтрЧислоСтрок(ТекстДополнительныхУсловий);

		КонецЕсли;
		
		Если ОбластиМакета.ОбластьМакетаСтрока <> Неопределено Тогда

			ПараметрыНоменклатуры = Новый Структура;

			Если ЕстьТЧРаботыУслуги Тогда

				Для каждого СтрокаРаботыУслуги Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл

					Итоги.ОбработаноСтрок = Итоги.ОбработаноСтрок + 1;

					Если СтрокаРаботыУслуги.ЭтоРазделитель
						И ОбластиМакета.ОбластьМакетаРазделитель = Неопределено Тогда

						Продолжить;

					КонецЕсли;

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаРаботыУслуги, ДанныеПечати,
					ПараметрыНоменклатуры, Итоги);

					ОбластьМакетаСтроки = ?(СтрокаРаботыУслуги.ЭтоРазделитель, ОбластиМакета.ОбластьМакетаРазделитель,
					ОбластиМакета.ОбластьМакетаСтрока);
					ОбластьМакетаСтроки.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтроки);

					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакетаСтроки,
					СтрокаРаботыУслуги);

				КонецЦикла;

			КонецЕсли;

			Если ЕстьТЧЗапасы Тогда

				Для Каждого СтрокаЗапасы Из ДанныеОбъекта.ТаблицаЗапасы Цикл

					Итоги.ОбработаноСтрок = Итоги.ОбработаноСтрок + 1;

					Если СтрокаЗапасы.ЭтоРазделитель И ОбластиМакета.ОбластьМакетаРазделитель = Неопределено Тогда

						Продолжить;

					КонецЕсли;

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаЗапасы, ДанныеПечати, ПараметрыНоменклатуры,
					Итоги);

					ОбластьМакетаСтроки = ?(СтрокаЗапасы.ЭтоРазделитель, ОбластиМакета.ОбластьМакетаРазделитель,
					ОбластиМакета.ОбластьМакетаСтрока);
					ОбластьМакетаСтроки.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластьМакетаСтроки);

					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакетаСтроки, СтрокаЗапасы);

				КонецЦикла;

			КонецЕсли;

		КонецЕсли;

		// :::Итоги по посл. странице
		Если ОбластиМакета.ОбластьМакетаИтогоПоСтранице <> Неопределено Тогда

			ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(Итоги);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);

		КонецЕсли;

		// :::Итоги по документу
		Если ОбластиМакета.ОбластьМакетаИтогоПоДокументу <> Неопределено Тогда

			ДанныеПечати.Вставить("Всего", ПечатьДокументовУНФ.ФорматСумм(Итоги.Сумма));
			ДанныеПечати.Вставить("ЗаголовокНДС", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(
			Итоги.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Ложь,
			Итоги.ЕстьСтавкаНольПроцентов));
			ДанныеПечати.Вставить("ВсегоНДС", ?(Итоги.СуммаНДС = 0
			И Не Итоги.ЕстьСтавкаНольПроцентов, "-", ПечатьДокументовУНФ.ФорматСумм(
			Итоги.СуммаНДС, , "0,00")));

			ОбластиМакета.ОбластьМакетаИтогоПоДокументу.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоДокументу);

		КонецЕсли;

		// :::Частичная оплата
		Если Итоги.ВывестиСекциюЧастичнаяОплата Тогда

			Если ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО <> Неопределено Тогда

				ДанныеПечати.Вставить("НДСкОплате", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(
				Итоги.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Истина));

				Если ДанныеОбъекта.ТаблицаПланаОплат.Итог("ПроцентОплаты") > 0 Тогда

					ДанныеПечати.Вставить("ПроцентОплаты", ДанныеОбъекта.ТаблицаПланаОплат.Итог("ПроцентОплаты"));
					ДанныеПечати.Вставить("ВсегоКОплате", ПечатьДокументовУНФ.ФорматСумм(
					ДанныеОбъекта.ТаблицаПланаОплат.Итог("СуммаОплаты")));
					ДанныеПечати.Вставить("ВсегоНДСкОплате", ПечатьДокументовУНФ.ФорматСумм(
					ДанныеОбъекта.ТаблицаПланаОплат.Итог("СуммаНДСОплаты")));

				Иначе

					СтрокаПрочерк = НСтр("ru ='-'");
					ДанныеПечати.Вставить("ВсегоКОплате", СтрокаПрочерк);
					ДанныеПечати.Вставить("ПроцентОплаты", СтрокаПрочерк);
					ДанныеПечати.Вставить("ВсегоНДСкОплате", СтрокаПрочерк);

				КонецЕсли;

				ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоНДС_ЧО);

			КонецЕсли;

		КонецЕсли;

		// ::: Итоговая скидка по документу
		Если Итоги.ЕстьСкидки Тогда

			Если ОбластиМакета.ОбластьМакетаИтогоСкидка <> Неопределено Тогда

				ОбластиМакета.ОбластьМакетаИтогоСкидка.Параметры.Заполнить(Итоги);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоСкидка);

			КонецЕсли;

		КонецЕсли;

		// ::: Всего к оплате
		Если Итоги.ЕстьСкидки Тогда
			ЗаголовокВсегоКОплате = НСтр("ru = 'Всего к оплате (с учетом скидки):'");
		Иначе
			ЗаголовокВсегоКОплате = НСтр("ru = 'Всего к оплате:'");
		КонецЕсли;
		ДанныеПечати.Вставить("ЗаголовокВсегоКОплате", ЗаголовокВсегоКОплате);
		ДанныеПечати.Вставить("ИтогоКОплате", ПечатьДокументовУНФ.ФорматСумм(Итоги.Всего));

		ВесПоДокументу = ?(ДанныеОбъектовПечати.Колонки.Найти("Вес") <> Неопределено, ДанныеОбъекта.Вес, 0);
		ДанныеПечати.Вставить("ИтогоВес", ?(Итоги.Вес <> 0, Итоги.Вес, ВесПоДокументу));

		ОбластьМакетаИтогоКОплате = ?(ДанныеПечати.ИтогоВес <> 0, ОбластиМакета.ОбластьМакетаИтогоКОплатеСВесом,
		ОбластиМакета.ОбластьМакетаИтогоКОплате);
		Если ОбластьМакетаИтогоКОплате <> Неопределено Тогда

			ОбластьМакетаИтогоКОплате.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогоКОплате);

		КонецЕсли;

		// ::: Сумма прописью
		Если ОбластиМакета.ОбластьМакетаСуммаПрописью <> Неопределено Тогда

			ИтоговаяСтрока = НСтр("ru = 'Всего наименований %1, на сумму %2'");
			ФорматированнаяСумма = ПечатьДокументовУНФ.ФорматСумм(Итоги.Всего,
			ДанныеОбъекта.ВалютаДокумента);

			ДанныеПечати.Вставить("ИтоговаяСтрока", СтрШаблон(ИтоговаяСтрока, Итоги.Количество,
			ФорматированнаяСумма));
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(Итоги.Всего,
			ДанныеОбъекта.ВалютаДокумента));

			ОбластиМакета.ОбластьМакетаСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСуммаПрописью);

		КонецЕсли;

		// :::Дополнительные условия
		Если Не ПустаяСтрока(ТекстДополнительныхУсловий) И ОбластиМакета.ОбластьМакетаУсловия <> Неопределено Тогда

			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаУсловия);

			Для СчетчикСтрок = 1 По Итоги.КоличествоСтрокВОписанииУсловий Цикл

				ДанныеПечати.Вставить("ТекстДополнительныхУсловий", СтрПолучитьСтроку(ТекстДополнительныхУсловий,
				СчетчикСтрок));

				ОбластиМакета.ОбластьМакетаУсловия.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаУсловия);

			КонецЦикла;

		КонецЕсли;
		
		#Вставка
		Если ЗначениеЗаполнено(ДанныеОбъекта.Комментарий) Тогда
			ОбластиМакета.Вставить("Комментарий", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
				"Комментарий", , Ошибки));
	        ДанныеПечати.Вставить("Комментарий", ДанныеОбъекта.Комментарий);
			ОбластиМакета.Комментарий.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.Комментарий);
		КонецЕсли;
		#КонецВставки

		// :::Подписи
		Если ОбластиМакета.ОбластьМакетаПодпись <> Неопределено Тогда

			ОбластиМакета.ОбластьМакетаПодпись.Параметры.Заполнить(ДанныеОбъекта);

			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда

				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя картинки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьПредпринимателя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьГлавногоБухгалтера", "ФаксимилеГлавногоБухгалтера");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
				ПодписиИФаксимиле.Вставить("ПечатьПредпринимателя", "ФаксимилеПечати");

				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластиМакета.ОбластьМакетаПодпись,
				ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаПодпись);

		Иначе

			ТекстСообщения = НСтр(
			"ru = 'Изменился типовой макет печатной формы Счет на оплату. Для корректной
			|работы печатной формы необходимо обновить отредактированный ранее макет. 
			|Это можно выполнить самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
			|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");

			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);

		КонецЕсли;

		// :::Ответственный
		Если ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумента <> Неопределено Тогда

			ТелефонОтветственного = "";
			ЭлектроннаяПочтаОтветственного = "";
			Если ЗначениеЗаполнено(ДанныеОбъекта.ФизическоеЛицоОтветственного) Тогда

				ТелефонОтветственного = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
				ДанныеОбъекта.ФизическоеЛицоОтветственного, Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
				ЭлектроннаяПочтаОтветственного = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(
				ДанныеОбъекта.ФизическоеЛицоОтветственного, Справочники.ВидыКонтактнойИнформации.EmailФизическиеЛица);

			КонецЕсли;

			ОтветственныйЗаОформлениеДокумента = Строка(ДанныеОбъекта.Ответственный) + ?(ПустаяСтрока(
			ТелефонОтветственного), "", НСтр("ru =', тел.:'")) + ТелефонОтветственного + ?(ПустаяСтрока(
			ЭлектроннаяПочтаОтветственного), "", НСтр("ru =', e-mail:'")) + ЭлектроннаяПочтаОтветственного;
			ДанныеПечати.Вставить("ОтветственныйЗаОформлениеДокумента", ОтветственныйЗаОформлениеДокумента);

			ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумента.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаОтветственныйЗаОформлениеДокумента);

		Иначе

			ТекстСообщения = НСтр(
			"ru = 'Изменился типовой макет печатной формы Счет на оплату. Для корректной
			|работы печатной формы необходимо обновить отредактированный ранее макет. 
			|Это можно выполнить самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
			|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");

			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);

		КонецЕсли;

		ТекущаяОбластьПечати = Неопределено;
		Если ВывестиПланОплаты Тогда

			ОписаниеОбъектаПечати = ОбъектыПечати.НайтиПоЗначению(ДанныеОбъекта.Ссылка);
			Если ОписаниеОбъектаПечати <> Неопределено Тогда

				ТекущаяОбластьПечати = ТабличныйДокумент.Области.Найти(ОписаниеОбъектаПечати.Представление);

			КонецЕсли;

		КонецЕсли;

		Если ТекущаяОбластьПечати = Неопределено Тогда

			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати,
			ДанныеОбъекта.Ссылка);

		Иначе

			ПрисоединитьКОбластиПечатиДокумента(ТабличныйДокумент, ТекущаяОбластьПечати, ОписаниеОбъектаПечати);

		КонецЕсли;

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции
