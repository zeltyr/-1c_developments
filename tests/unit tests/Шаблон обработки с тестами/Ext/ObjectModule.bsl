#Область ОписаниеПеременных

// переменные для автотестов
Перем КонтекстЯдра;
Перем Утверждения;

Перем ТестовыеДанные; // Служебная структура, в которую добавляются тестовые данные перед инициализацией тестов                       

#КонецОбласти

 #Область Автотесты

//{ основная процедура для юнит-тестирования xUnitFor1C
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;

	НаборТестов.НачатьГруппу("Проверка реквизитов");
	НаборТестов.Добавить("ТестДолжен_ПроверитьРеквизит_НастройкаОтправки");
	НаборТестов.Добавить("ТестДолжен_ПроверитьТипизациюРеквизита_НастройкаОтправки");
	//НаборТестов.Добавить("ТестДолжен_УдалитьНоменклатуруИзПланаОбмена");	
		
КонецПроцедуры

//}

//{ Блок юнит-тестов

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
	ТестовыеДанные = Новый Структура;
	ТестовыеДанные.Вставить("РеквизитНастройкаОтправкиТК", Метаданные.Справочники.гиг_СпособыДоставки.Реквизиты.Найти("НастройкаОтправкиТК")); 
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
	    ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

// проверить подключение к рэббит

Процедура ТестДолжен_ПроверитьРеквизит_НастройкаОтправки() Экспорт
	
	Утверждения.ПроверитьНеРавенство(ТестовыеДанные.РеквизитНастройкаОтправкиТК, Неопределено, 
		"Не удалось найти добавленный реквизит ""НастройкаОтправкиТК""");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьТипизациюРеквизита_НастройкаОтправки() Экспорт
	
	ДанныеРеквизита = ТестовыеДанные.РеквизитНастройкаОтправкиТК;
	Если ДанныеРеквизита = Неопределено Тогда
		Утверждения.Проверить(Ложь, "Ошибка получения реквизита");
		Возврат;
	КонецЕсли;
	
	ТипыРеквизита = ДанныеРеквизита.Тип.Типы();
	Утверждения.ПроверитьРавенство(ТипыРеквизита.Количество(), 1, "Реквизит не должен быть составного типа");
	
	Утверждения.ПроверитьРавенство(ТипыРеквизита[0], Тип("СправочникСсылка.ТК_НастройкиОтправок"), "Неверный тип реквизита");
	
КонецПроцедуры


Процедура ПроверитьКорректностьЗаполненияТаблицы(ОтправкаВТК, ИмяТаблицы, ОжидаетсяСтрок = 1) Экспорт
	
	КоличествоСтрок = отправкаВТК[ИмяТаблицы].Количество();
	ТекстОшибки = СтрШаблон("не корректно заполнилась таблица %1! Ожидали 1, получилось %2", ИмяТаблицы, КоличествоСтрок);
	Утверждения.Проверить(КоличествоСтрок = ОжидаетсяСтрок, ТекстОшибки);
		
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполненияКолонкиТаблицы(ОтправкаВТК, ИмяТаблицы, ИмяКолонки, ОжидаемоеЗначение) Экспорт
	
	КоличествоСтрок = отправкаВТК[ИмяТаблицы].Количество();
	Если КоличествоСтрок = 0 Тогда
		
		ТекстОшибки = НСтр("ru='Нет строк в таблице %1'");
		Утверждения.Проверить(Ложь, СтрШаблон(ТекстОшибки, ИмяТаблицы));
		
	Иначе
		
		строка = отправкаВТК.Распоряжения[0];
		ТекстОшибки = НСтр("ru='Неверно заполнилась колонка %1 в таблице %2'");
		Утверждения.Проверить(Строка[ИмяКолонки] = ОжидаемоеЗначение, СтрШаблон(ТекстОшибки, ИмяКолонки, ИмяТаблицы));
		
	КонецЕсли;	
		
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполненияРеквизита(ДанныеОбъекта, ИмяРеквизита, ЗначениеЭталон)


	ТекстОшибки = СтрШаблон("Реквизит %1 заполнен неверно. Ожидали %2, а получили %3", 
		ИмяРеквизита, ЗначениеЭталон, ДанныеОбъекта[ИмяРеквизита]);
		
	Утверждения.Проверить(ДанныеОбъекта[ИмяРеквизита] = ЗначениеЭталон, ТекстОшибки);
	
КонецПроцедуры


// вспомогательная процедура, где описаны какие базовые утверждения есть у фреймворка xddRunner
Процедура УтвержденияПодсказка()
	
	// Утверждения.Проверить(Значение, ДопСообщениеОшибки) - проверить на равенство с Истина
	// Утверждения.ПроверитьИстину(Значение, ДопСообщениеОшибки) - проверить на равенство с Истина
	// Утверждения.ПроверитьЛожь(Значение, ДопСообщениеОшибки) - проверить на равенство с Ложь
	// Утверждения.ПроверитьРавенство(Значение1, Значение2, ДопСообщениеОшибки) - проверить равенство
	// Утверждения.ПроверитьНеРавенство(Значение1, Значение2, ДопСообщениеОшибки) - проверить неравенство
	
КонецПроцедуры

#КонецОбласти // TDD

