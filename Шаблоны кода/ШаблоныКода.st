{1,
{3,
{"Шаблоны кода",1,0,"",""},
{3,
{"Препроцессоры",1,0,"",""},
{0,
{"ТолстыйКлиентОбычноеПриложение",0,1,"ТолстыйКлиентОбычноеПриложение","#Если ТолстыйКлиентОбычноеПриложение Тогда

	
	
#КонецЕсли	
"}
},
{0,
{"ТолстыйКлиентУправляемоеПриложение",0,1,"ТолстыйКлиентУправляемоеПриложение","#Если ТолстыйКлиентУправляемоеПриложение Тогда

	
	
#КонецЕсли	
"}
},
{0,
{"ТолстыйКлиентОбычноеИУправляемое",0,1,"ТолстыйКлиентОбычноеИУправляемое","#Если ТолстыйКлиентОбычноеПриложение ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда

	
	
#КонецЕсли	
"}
}
},
{6,
{"СтандартыОформления",1,0,"",""},
{0,
{"Переменная",0,1,"Перем","Перем <?""Введите имя переменной"">; // <?""Введите описание переменной"">"}
},
{0,
{"Модуль общий",0,1,"МодульОбщ[ий]","////////////////////////////////////////////////////////////////////////////////
// Заголовок модуля представляет собой комментарий в самом начале модуля. 
// В заголовке модуля приводится его краткое описание и условия применения.
// Для модулей форм в заголовке рекомендуется размещать описание параметров формы.
//
// Н-р: Клиентские процедуры и функции общего назначения:
// - для работы со списками в формах;
// - для работы с журналом регистрации;
// - для обработки действий пользователя в процессе редактирования
//   многострочного текста, например комментария в документах;
// - прочее.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

 // содержит экспортные процедуры и функции, предназначенные для использования другими объектами конфигурации 
 // или другими программами (например, через внешнее соединение).



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// предназначен для модулей, которые являются частью некоторой функциональной подсистемы. 
// В нем должны быть размещены экспортные процедуры и функции, которые допустимо вызывать 
// только из других функциональных подсистем этой же библиотеки.



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// содержит процедуры и функции, составляющие внутреннюю реализацию общего модуля. 
// В тех случаях, когда общий модуль является частью некоторой функциональной подсистемы, 
// включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные 
// экспортные процедуры и функции, предназначенные только для вызова из других объектов данной подсистемы.
// 
// Для объемных общих модулей рекомендуется разбивать этот раздел на подразделы, по функциональному признаку. Например: 
//
//#Область ОбновлениеИнформационнойБазы
//
//#КонецОбласти


#КонецОбласти"}
},
{0,
{"Модуль формы",0,1,"МодульФ[ормы]","////////////////////////////////////////////////////////////////////////////////
// Заголовок модуля представляет собой комментарий в самом начале модуля. 
// В заголовке модуля приводится его краткое описание и условия применения.
// Для модулей форм в заголовке рекомендуется размещать описание параметров формы.
//
// Н-р: Клиентские процедуры и функции общего назначения:
// - для работы со списками в формах;
// - для работы с журналом регистрации;
// - для обработки действий пользователя в процессе редактирования
//   многострочного текста, например комментария в документах;
// - прочее.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Раздел «Обработчики событий формы» содержит процедуры-обработчики событий формы: ПриСозданииНаСервере, ПриОткрытии и т.п. 


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Раздел «Обработчики событий элементов шапки формы» содержит процедуры-обработчики элементов, 
// расположенных в основной части формы (все, что не связано с таблицами на форме). 


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>

// В разделах «Обработчики событий элементов таблицы формы <имя таблицы формы>» 
// размещаются процедуры-обработчики таблиц формы и элементов таблиц. 
// Для процедур-обработчиков каждой таблицы должен быть создан свой раздел. 


#КонецОбласти

#Область ОбработчикиКомандФормы

// Раздел «Обработчики команд формы» содержит процедуры-обработчики команд формы 
// (имена которых задаются в свойстве Действие команд формы). 


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// содержит процедуры и функции, составляющие внутреннюю реализацию модуля формы. 
// 
// Для объемных модулей рекомендуется разбивать этот раздел на подразделы, по функциональному признаку. Например: 
//
//#Область ОбновлениеИнформационнойБазы
//
//#КонецОбласти



#КонецОбласти"}
},
{0,
{"Модуль объекта",0,1,"МодульОбъ[екта]","////////////////////////////////////////////////////////////////////////////////
// Заголовок модуля представляет собой комментарий в самом начале модуля. 
// В заголовке модуля приводится его краткое описание и условия применения.
// Для модулей форм в заголовке рекомендуется размещать описание параметров формы.
//
// Н-р: Клиентские процедуры и функции общего назначения:
// - для работы со списками в формах;
// - для работы с журналом регистрации;
// - для обработки действий пользователя в процессе редактирования
//   многострочного текста, например комментария в документах;
// - прочее.
//  
////////////////////////////////////////////////////////////////////////////////


#Область ОписаниеПеременных



#КонецОбласти

#Область ПрограммныйИнтерфейс

// Раздел «Программный интерфейс» содержит экспортные процедуры и функции, предназначенные для использования 
// в других модулях конфигурации или другими программами (например, через внешнее соединение). 
// Не следует в этот раздел помещать экспортные функции и процедуры, которые предназначены для вызова 
// исключительно из модулей самого объекта, его форм и команд. 
//
// Например, процедуры заполнения табличной части документа, которые вызываются из обработки заполнения в модуле объекта 
// и из формы документа в обработчике команды формы не являются программным интерфейсом модуля объекта, 
// т.к. вызываются только в самом модуле и из форм этого же объекта. 
// Их следует размещать в разделе «Служебные процедуры и функции». 


#КонецОбласти

#Область ОбработчикиСобытий

// Раздел «Обработчики событий» содержит обработчики событий модуля объекта (ПриЗаписи, ПриПроведении и др.) 


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Раздел «Служебный программный интерфейс» имеет такое же предназначение, как и в общих модулях. 
// предназначен для модулей, которые являются частью некоторой функциональной подсистемы. 
// В нем должны быть размещены экспортные процедуры и функции, которые допустимо вызывать 
// только из других функциональных подсистем этой же библиотеки.


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// содержит процедуры и функции, составляющие внутреннюю реализацию модуля объекта. 
// В тех случаях, когда модуль объекта является частью некоторой функциональной подсистемы, 
// включающей в себя несколько объектов метаданных, в этом разделе также могут быть размещены служебные 
// экспортные процедуры и функции, предназначенные только для вызова из других объектов данной подсистемы.
// 
// Для объемных модулей рекомендуется разбивать этот раздел на подразделы, по функциональному признаку. Например: 
//
//#Область ОбновлениеИнформационнойБазы
//
//#КонецОбласти



#КонецОбласти

#Область Инициализация

#КонецОбласти"}
},
{0,
{"Модуль команды",0,0,"","#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
},
{0,
{"Область",0,1,"Обла[сть]","#Область <?""Введите имя области"">



#КонецОбласти //<?""Введите имя области"">"}
}
},
{3,
{"Полезные мелочи",1,0,"",""},
{0,
{"Регистрация ссылки в узел обмена",0,0,"","Процедура РегистрацияИзФайла(СсылкаНаДокумент)
	
	лОрганизация = Справочники.ПредопределенныеЭлементы.Орг_Геба;
	лУзелОбмена  = ВыбратьУзелОбмена (Организация);
	
	Если ЗначениеЗаполнено(лУзелОбмена) Тогда
		ПланыОбмена.ЗарегистрироватьИзменения(лУзелОбмена, Рез.СсылкаНаДокумент);
	КонецЕсли;
	
КонецПроцедуры

Функция ВыбратьУзелОбмена (Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ""ВЫБРАТЬ
	|	РегистрацияНестлеОрганизации.Ссылка
	|ИЗ
	|	ПланОбмена.РегистрацияНестле.Организации КАК РегистрацияНестлеОрганизации
	|ГДЕ
	|	РегистрацияНестлеОрганизации.Организация = &Организация"";
	Запрос.УстановитьПараметр(""Организация"", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		УзелОбмена = Выборка.Ссылка;
	Иначе
		УзелОбмена = ПланыОбмена.РегистрацияНестле.ПустаяСсылка();
	КонецЕсли;
	
	Возврат УзелОбмена;
	
КонецФункции
"}
},
{0,
{"ПодсказкаПоОбъектуМетаданных",0,1,"[подсказ]ка","Если ЛОЖЬ Тогда //ПОТОМ УДАЛИТЬ
	//сюда можно вставить любой свой объект метаданных, по которому вам нужная подсказка
	Док = Документы.ЗаказПокупателя.СоздатьДокумент();
КонецЕсли;"}
},
{0,
{"ПараметрыОтбора",0,0,"[ПараметрыО]тбора","ПараметрыОтбора = Новый Структура;
ПараметрыОтбора.Вставить(""НазваниеОтбора"", Отбор);
"}
}
}
}
}